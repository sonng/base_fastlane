# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane
# fastlane_require 'json'

default_platform(:ios)

platform :ios do
  
  desc "Build the application"
  lane :build do |options|
    options = check_and_load_config options
    build_internal options
  end

  lane :build_and_upload do |options|
    options = check_and_load_config options
    build_internal options
    distribute_ipa options
  end

  desc "Build the application"
  lane :build_internal do |options|
    set_version(options)
    certificates_and_profiles(options)
    build_ipa(options)
  end

  # Helper Methods
  desc "Check parameters passed in"
  lane :check_and_load_config do |options|
    file = File.read('config.json')
    config_hash = JSON.parse(file, symbolize_names: true)
    options = config_hash.merge(options)

    if options.key?(:config) == false
      UI.user_error!("Please provide a config e.g -- bundle exec fastlane build config:qa version:1.4.2.3")
    else
      # Fix up config and change it from a string to a symbol
      options[:config] = options[:config].to_sym
    end

    if (options[:configs]).key?(options[:config]) == false
      UI.user_error!("#{options[:configs][:config]} Config doesn't exist, please check config.json")
    else
      # Flatten the config based on the symbol that we got above
      config_key = options[:config]
      options[:config] = options[:configs][config_key]
    end

    # Add in binary name
    options[:build_path] = "build/"
    options[:output_name] = "#{options[:config][:scheme]}_#{options[:version]}.ipa"

    options
  end

  desc "Set the right version number"
  lane :set_version do |options|
    increment_version_number(version_number: options[:version][/^[0-9]*\.[0-9]*\.[0-9]*/])
    increment_build_number(build_number: options[:version])
  end

  desc "Download certificates using match"
  lane :certificates_and_profiles do |options|
    puts options
    match(
      git_url: options[:git_url],
      git_branch: options[:git_repo],
      app_identifier: options[:config][:app_identifier] || options[:app_identifier],
      type: options[:config][:build_type], 
      readonly: true, 
      verbose: true
    )
  end

  desc "Build the App"
  lane :build_ipa do |options|
    build_app(
      workspace: options[:workspace],
      configuration: options[:config][:config],
      scheme: options[:config][:scheme],
      silent: false,
      clean: true,
      output_directory: options[:build_path],
      output_name: options[:output_name]
    )
  end

  desc "Distribution"
  lane :distribute_ipa do |options|
    hockey(
      api_token: options[:config][:hockeyapp_id] || options[:hockeyapp_id],
      ipa: "./#{options[:build_path]}#{options[:output_name]}"
    )
  end
end
